package com.teamfirst.manager.services.impl;

import java.util.List;

import com.teamfirst.entity.Business_WindowVO;
import com.teamfirst.entity.Window;
import com.teamfirst.manager.services.WindowService;
import com.teamfirst.server.dao.WindowDAO;
import com.teamfirst.server.dao.impl.WindowDAOImplJDBC;

public class WindowServiceImplJDBC implements WindowService {
	WindowDAO windowDAO = null;

	public WindowServiceImplJDBC() {
		this.windowDAO = new WindowDAOImplJDBC();
		// TODO 自动生成的构造函数存根
	}

	@Override
	// 插入
	public int insertWindow(Window window) {
		if (window == null) {
			return 0;
		} else {
			int row = this.windowDAO.insertWindow(window);
			return row;
		}
	}

	@Override
	public int updateDisabledByNum(int num) {

		if (num < 0) {
			return 0;
		} else {
			int row = this.windowDAO.updateDisabledByNum(num);
			return row;
		}
	}

	@Override
	// 更新
	public int updateWindowByNum(Window window) {
		if (window == null) {
			return 0;
		} else {
			int row = this.windowDAO.updateDisabledByNum(window);
			return row;
		}
	}

	@Override
	public int updateWindowById(Window window) {
		if (window == null) {
			return 0;
		} else {
			int row = this.windowDAO.updateWindowById(window);
			return row;
		}
	}

	@Override
	public int updateWindowByBusinessId(Window window) {
		if (window == null) {
			return 0;
		} else {
			int row = this.windowDAO.updateWindowById(window);
			return row;
		}
	}

	@Override
	public int updateDisabledByBusinessId(int businessId) {

		if (businessId < 0) {
			return 0;
		} else {
			int row = this.windowDAO.updateDisabledByBusinessId(businessId);
			return row;
		}
	}

	@Override
	public Window queryWindowById(int id) {

		if (id < 0) {
			return null;
		} else {

			return this.windowDAO.queryWindowById(id);
		}
	}

	@Override
	// 查询
	public Window queryWindowByNum(int num) {
		if (num < 0) {
			return null;
		} else {

			return this.windowDAO.queryWindowByNum(num);
		}
	}

	@Override
	public Window queryWindowByBusinessId(int businessId) {
		if (businessId < 0) {
			return null;
		} else {

			return this.windowDAO.queryWindowByBusinessId(businessId);
		}
	}

	@Override
	public List<Window> queryAll() {

		return this.windowDAO.queryAll();
	}

	@Override
	public List<Business_WindowVO> queryAllForBusinessVO() {

		return this.windowDAO.queryAllForBusinessVO();
	}

	@Override
	public List<Business_WindowVO> queryByNumForBusinessVO(int num) {

		return this.windowDAO.queryByNumForBusinessVO(num);
	}

	@Override
	public List<Business_WindowVO> queryByBusinessNameForBusinessVO(String name) {

		return this.windowDAO.queryByBusinessNameForBusinessVO(name);
	}

	

}
